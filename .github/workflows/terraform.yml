  name: Deploy Azure Functions with Terraform

  on:
    push:
      branches:
        - master  # Trigger the workflow on push to the main branch

  env:
    DOTNET_SENDER_FUNC_WORKING_DIR: "./Sender"
    DOTNET_RECEIVER_FUNC_WORKING_DIR: "./Receiver"
    AZURE_RESOURCE_GROUP: "message-resource-group"
    SENDER_APP_NAME: "sender-function-app"
    RECEIVER_APP_NAME: "receiver-function-app"

  permissions:
    id-token: write

  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup DotNet Environment
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: '8.x'
            
      # Restore dependencies for the solution
      - name: Restore dependencies
        run: dotnet restore
        
      # Build the solution 
      - name: Build the solution
        run: dotnet build --configuration Release --no-restore

      # Publish the function apps
      # Sender Function
      - name: Publish Sender Function
        run: dotnet publish **/Sender.csproj -c Release -o ./publish
        working-directory: ${{ env.DOTNET_SENDER_FUNC_WORKING_DIR }}

      - name: Generate Deployment Package for Sender Function
        run: |
          zip -r ../deployment.zip ./
        working-directory: ${{ env.DOTNET_SENDER_FUNC_WORKING_DIR }}/publish

      - name: Upload Deployment Package for Sender Function
        uses: actions/upload-artifact@v4
        with:
          name: function-deployment
          path: ${{ env.DOTNET_SENDER_FUNC_WORKING_DIR }}/deployment.zip
      
      # Receiver Function
      - name: Publish Receiver Function
        run: dotnet publish **/Receiver.csproj -c Release -o ./publish
        working-directory: ${{ env.DOTNET_RECEIVER_FUNC_WORKING_DIR }}

      - name: Generate Deployment Package for Receiver Function
        run: |
          zip -r ../deployment.zip ./
        working-directory: ${{ env.DOTNET_RECEIVER_FUNC_WORKING_DIR }}/publish

      - name: Upload Deployment Package for Receiver Function
        uses: actions/upload-artifact@v4
        with:
          name: function-deployment
          path: ${{ env.DOTNET_RECEIVER_FUNC_WORKING_DIR }}/deployment.zip

      # # Publish the function apps
      # - name: Deploy Sender Function
      #   uses: Azure/functions-action@v1
      #   id: sender
      #   with:
      #     app-name: "sender-function-app"
      #     slot-name: 'Production'
      #     package: "./Sender/bin/Release/net8.0"  # Path to your sender function app publish directory

      # - name: Deploy Receiver Function
      #   uses: Azure/functions-action@v1
      #   id: receiver
      #   with:
      #     app-name: "receiver-function-app"
      #     slot-name: 'Production'
      #     package: "./Receiver/bin/Release/net8.0"  # Path to your receiver function app publish directory

    terraform:
      runs-on: ubuntu-latest

      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5  # Use the appropriate Terraform version

      - name: Terraform Init
        id: init
        run: terraform init
      
      # Checks that all Terraform configuration files adhere to a canonical format
      # - name: Terraform Format
      #   run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    deploy:
      needs: [terraform, build]
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download Deployment Package for Sender Function
        uses: actions/download-artifact@v4
        with:
          name: function-deployment-sender
          path: ${{ env.DOTNET_SENDER_FUNC_WORKING_DIR }}

      - name: Deploy Sender Function
        run: |
          az functionapp deployment source config-zip --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.SENDER_APP_NAME }} --src ${{ env.DOTNET_SENDER_FUNC_WORKING_DIR }}/deployment.zip

      - name: Download Deployment Package for Receiver Function
        uses: actions/download-artifact@v4
        with:
          name: function-deployment-receiver
          path: ${{ env.DOTNET_RECEIVER_FUNC_WORKING_DIR }}
      
      - name: Deploy Receiver Function
        run: |
          az functionapp deployment source config-zip --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.RECEIVER_APP_NAME }} --src ${{ env.DOTNET_RECEIVER_FUNC_WORKING_DIR }}/deployment.zip
